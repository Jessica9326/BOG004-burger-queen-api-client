import '@testing-library/jest-dom';
import * as React from 'react';
import {rest} from 'msw';
import {setupServer} from 'msw/node';
import {render, fireEvent, waitFor, screen} from '@testing-library/react';
import Login from '../components/login';
import { BrowserRouter as Router } from "react-router-dom";


const fakeUserResponse = {token: '123456'}
const server = setupServer(
  rest.post('http://localhost:8080/login', (req, res, ctx) => {
    console.log(res(ctx.json(fakeUserResponse)));
    return res(ctx.json(fakeUserResponse))
  }),
)

console.log('soy servidor', server);

beforeAll(() => server.listen())
afterEach(() => {
  server.resetHandlers()
  sessionStorage.removeItem('token')
})
afterAll(() => server.close())

test('allows the user to login successfully', async () => {
    render(
    <Router>
    <Login />
    </Router>
    )
  
    fireEvent.change(screen.getByLabelText('email'), {
      target: {value: 'waiter@foodelicious.com'},
    })
    fireEvent.change(screen.getByLabelText('password'), {
      target: {value: '123456'},
    })
  
    fireEvent.click(screen.getByText('INICIAR SESIÃ“N'))
 
    expect(sessionStorage.getItem('token')).toEqual(fakeUserResponse.token)
  })
  





  {/* // test('buttons should be in the document', async () => { */}
    //   render(<Order />);
    //   render(<Product />);
    //   await waitFor(() => {
    //     expect(screen.getByTestId('product')).toBeInTheDocument();

    //   });
    //   const button = screen.getByText('DESAYUNOS');
    //   fireEvent.click(button);
    //   expect(button).toBeInTheDocument();
    // })
        

    // test("Products are being rendering dinamically", async ()=>{
    //   render(<Order />);

    //   const resolvedProduct = await screen.findAllByTestId("product");
    
    //   expect(resolvedProduct.length).toBe(3);
      // await waitFor(()=>{
      //   const products = screen.getAllByTestId("product");
      // });
    
    // })
  

// falta saber como hacer que el test reconozca al array de productos para expect que cuantos 
